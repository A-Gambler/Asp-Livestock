@model Helpers.PaginatedList<livestock.Models.StockPurchase>
@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@



@foreach (var item in Model)
{
    try
    {
        @*<tr onclick="location.href = '/StockPurchases/Details?id=@item.ID">*@
        <tr onclick="ChangePage('@item.ID', 'Details')">
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BuyerNo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Buyer.Code)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TypeOfAnimal.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Number)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Freight)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EstimatedWeight)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Agent.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Location.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.VendorName)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.IntendedDeliveryDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Transport.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateDelivered)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NumberDelivered)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.YTBDelivered)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.InvoiceRecD)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ContactName)
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.ContactPhone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ContactFax)
                </td>*@

            <td>
                @*A.L. <a asp-page="./Edit" asp-route-id="@item.ID">Edit</a>*@
                <a href="/StockPurchases/Edit?id=@item.ID" style="cursor:pointer">Edit</a> |

                @*<a asp-page="./Details" asp-route-id="@item.ID">Details</a> |*@

                @*A.L. <a asp-page="./Delete" asp-route-id="@item.ID">Delete</a>*@
                <a href="/StockPurchases/Delete?id=@item.ID" style="cursor:pointer">Delete</a>
            </td>
        </tr>
    }
    catch (Exception ex)
    {

    }

}

<tr>
    <td colspan="10">
        @{
            var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.HasNextPage ? "disabled" : "";
        }

        @*<a asp-controller="StockPurchasesAPI" asp-action="Search2"
           asp-route-pageNumber="@(Model.StockPurchase.PageIndex - 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn btn-default @prevDisabled">
            Previous
        </a>
        <a asp-controller="StockPurchasesAPI" asp-action="Search2"
           asp-route-pageNumber="@(Model.StockPurchase.PageIndex + 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           class="btn btn-default @nextDisabled">
            Next
        </a>*@

        <a onclick="RefreshStockPurchaseGrid($('#search').val(),@Model.PageIndex -1)"
           class="btn btn-default @prevDisabled">
            Previous
        </a>
        <a a onclick="RefreshStockPurchaseGrid($('#search').val(),@Model.PageIndex +1)"
           class="btn btn-default @nextDisabled">
            Next
        </a>
        <a style="margin-left:15px">
            Page @Model.PageIndex of @Model.TotalPages
        </a>
    </td>
    </tr>
